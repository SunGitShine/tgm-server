<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.truck.dao.TruckFleetTruckMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.truck.domain.TruckFleetTruck">
    <id column="truck_fleet_truck_id" jdbcType="INTEGER" property="truckFleetTruckId" />
    <result column="truck_fleet_id" jdbcType="INTEGER" property="truckFleetId" />
    <result column="truck_id" jdbcType="INTEGER" property="truckId" />
    <result column="plate_number" jdbcType="VARCHAR" property="plateNumber" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    truck_fleet_truck_id, truck_fleet_id, truck_id, plate_number, note
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.truck.domain.TruckFleetTruckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from truck_fleet_truck
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from truck_fleet_truck
    where truck_fleet_truck_id = #{truckFleetTruckId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from truck_fleet_truck
    where truck_fleet_truck_id = #{truckFleetTruckId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.tgm.truck.domain.TruckFleetTruckExample">
    delete from truck_fleet_truck
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="truck_fleet_truck_id" keyProperty="truckFleetTruckId" parameterType="com.juma.tgm.truck.domain.TruckFleetTruck" useGeneratedKeys="true">
    insert into truck_fleet_truck (truck_fleet_id, truck_id, plate_number, 
      note)
    values (#{truckFleetId,jdbcType=INTEGER}, #{truckId,jdbcType=INTEGER}, #{plateNumber,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="truck_fleet_truck_id" keyProperty="truckFleetTruckId" parameterType="com.juma.tgm.truck.domain.TruckFleetTruck" useGeneratedKeys="true">
    insert into truck_fleet_truck
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="truckFleetId != null">
        truck_fleet_id,
      </if>
      <if test="truckId != null">
        truck_id,
      </if>
      <if test="plateNumber != null">
        plate_number,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="truckFleetId != null">
        #{truckFleetId,jdbcType=INTEGER},
      </if>
      <if test="truckId != null">
        #{truckId,jdbcType=INTEGER},
      </if>
      <if test="plateNumber != null">
        #{plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.truck.domain.TruckFleetTruckExample" resultType="java.lang.Long">
    select count(*) from truck_fleet_truck
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update truck_fleet_truck
    <set>
      <if test="record.truckFleetTruckId != null">
        truck_fleet_truck_id = #{record.truckFleetTruckId,jdbcType=INTEGER},
      </if>
      <if test="record.truckFleetId != null">
        truck_fleet_id = #{record.truckFleetId,jdbcType=INTEGER},
      </if>
      <if test="record.truckId != null">
        truck_id = #{record.truckId,jdbcType=INTEGER},
      </if>
      <if test="record.plateNumber != null">
        plate_number = #{record.plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update truck_fleet_truck
    set truck_fleet_truck_id = #{record.truckFleetTruckId,jdbcType=INTEGER},
      truck_fleet_id = #{record.truckFleetId,jdbcType=INTEGER},
      truck_id = #{record.truckId,jdbcType=INTEGER},
      plate_number = #{record.plateNumber,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.truck.domain.TruckFleetTruck">
    update truck_fleet_truck
    <set>
      <if test="truckFleetId != null">
        truck_fleet_id = #{truckFleetId,jdbcType=INTEGER},
      </if>
      <if test="truckId != null">
        truck_id = #{truckId,jdbcType=INTEGER},
      </if>
      <if test="plateNumber != null">
        plate_number = #{plateNumber,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where truck_fleet_truck_id = #{truckFleetTruckId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.tgm.truck.domain.TruckFleetTruck">
    update truck_fleet_truck
    set truck_fleet_id = #{truckFleetId,jdbcType=INTEGER},
      truck_id = #{truckId,jdbcType=INTEGER},
      plate_number = #{plateNumber,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR}
    where truck_fleet_truck_id = #{truckFleetTruckId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="truckFleetTruckId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into truck_fleet_truck
    (truck_fleet_id,truck_id,plate_number,note) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.truckFleetId},#{item.truckId},#{item.plateNumber},#{item.note})
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update truck_fleet_truck
      <set>
        truck_fleet_truck_id = #{item.truckFleetTruckId},
        truck_fleet_id = #{item.truckFleetId},
        truck_id = #{item.truckId},
        plate_number = #{item.plateNumber},
        note = #{item.note},
      </set>
      where truck_fleet_truck_id = #{item.truckFleetTruckId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update truck_fleet_truck
      <set>
        <if test="item.truckFleetId != null">
          truck_fleet_id = #{item.truckFleetId,jdbcType=INTEGER},
        </if>
        <if test="item.truckId != null">
          truck_id = #{item.truckId,jdbcType=INTEGER},
        </if>
        <if test="item.plateNumber != null">
          plate_number = #{item.plateNumber,jdbcType=VARCHAR},
        </if>
        <if test="item.note != null">
          note = #{item.note,jdbcType=VARCHAR},
        </if>
      </set>
      where truck_fleet_truck_id = #{item.truckFleetTruckId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>