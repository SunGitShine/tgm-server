<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.task.dao.TaskTimelineMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.task.domain.TaskTimeline">
    <id column="timeline_id" jdbcType="INTEGER" property="timelineId" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="truck_id" jdbcType="INTEGER" property="truckId" />
    <result column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    timeline_id, tenant_id, truck_id, driver_id, start_time, end_time
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.task.domain.TaskTimelineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from task_timeline
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_timeline
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_timeline
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </delete>
  <select id="countByExample" parameterType="com.juma.tgm.task.domain.TaskTimelineExample" resultType="java.lang.Long">
    select count(*) from task_timeline
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="insert" keyColumn="timeline_id" keyProperty="timelineId" parameterType="com.juma.tgm.task.domain.TaskTimeline" useGeneratedKeys="true">
    insert into task_timeline (tenant_id, truck_id, driver_id, 
      start_time, end_time)
    values (#{tenantId,jdbcType=INTEGER}, #{truckId,jdbcType=INTEGER}, #{driverId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="timeline_id" keyProperty="timelineId" parameterType="com.juma.tgm.task.domain.TaskTimeline" useGeneratedKeys="true">
    insert into task_timeline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="truckId != null">
        truck_id,
      </if>
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="truckId != null">
        #{truckId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.task.domain.TaskTimeline">
    update task_timeline
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="truckId != null">
        truck_id = #{truckId,jdbcType=INTEGER},
      </if>
      <if test="driverId != null">
        driver_id = #{driverId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.tgm.task.domain.TaskTimeline">
    update task_timeline
    set tenant_id = #{tenantId,jdbcType=INTEGER},
      truck_id = #{truckId,jdbcType=INTEGER},
      driver_id = #{driverId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where timeline_id = #{timelineId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="timelineId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into task_timeline
    (tenant_id,truck_id,driver_id,start_time,end_time) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.tenantId},#{item.truckId},#{item.driverId},#{item.startTime},#{item.endTime})
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update task_timeline
      <set>
        timeline_id = #{item.timelineId},
        tenant_id = #{item.tenantId},
        truck_id = #{item.truckId},
        driver_id = #{item.driverId},
        start_time = #{item.startTime},
        end_time = #{item.endTime},
      </set>
      where timeline_id = #{item.timelineId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update task_timeline
      <set>
        <if test="item.tenantId != null">
          tenant_id = #{item.tenantId,jdbcType=INTEGER},
        </if>
        <if test="item.truckId != null">
          truck_id = #{item.truckId,jdbcType=INTEGER},
        </if>
        <if test="item.driverId != null">
          driver_id = #{item.driverId,jdbcType=INTEGER},
        </if>
        <if test="item.startTime != null">
          start_time = #{item.startTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.endTime != null">
          end_time = #{item.endTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      where timeline_id = #{item.timelineId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>