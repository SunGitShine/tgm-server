<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.task.dao.TaskDeviceMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.task.domain.TaskDevice">
    <id column="device_id" jdbcType="INTEGER" property="deviceId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="truck_type_id" jdbcType="INTEGER" property="truckTypeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    device_id, task_id, truck_type_id
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.task.domain.TaskDeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from task_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_device
    where device_id = #{deviceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task_device
    where device_id = #{deviceId,jdbcType=INTEGER}
  </delete>
  <select id="countByExample" parameterType="com.juma.tgm.task.domain.TaskDeviceExample" resultType="java.lang.Long">
    select count(*) from task_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="insert" keyColumn="device_id" keyProperty="deviceId" parameterType="com.juma.tgm.task.domain.TaskDevice" useGeneratedKeys="true">
    insert into task_device (task_id, truck_type_id)
    values (#{taskId,jdbcType=INTEGER}, #{truckTypeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="device_id" keyProperty="deviceId" parameterType="com.juma.tgm.task.domain.TaskDevice" useGeneratedKeys="true">
    insert into task_device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="truckTypeId != null">
        truck_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="truckTypeId != null">
        #{truckTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.task.domain.TaskDevice">
    update task_device
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="truckTypeId != null">
        truck_type_id = #{truckTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where device_id = #{deviceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.tgm.task.domain.TaskDevice">
    update task_device
    set task_id = #{taskId,jdbcType=INTEGER},
      truck_type_id = #{truckTypeId,jdbcType=INTEGER}
    where device_id = #{deviceId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="deviceId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into task_device
    (task_id,truck_type_id) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.taskId},#{item.truckTypeId})
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update task_device
      <set>
        device_id = #{item.deviceId},
        task_id = #{item.taskId},
        truck_type_id = #{item.truckTypeId},
      </set>
      where device_id = #{item.deviceId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update task_device
      <set>
        <if test="item.taskId != null">
          task_id = #{item.taskId,jdbcType=INTEGER},
        </if>
        <if test="item.truckTypeId != null">
          truck_type_id = #{item.truckTypeId,jdbcType=INTEGER},
        </if>
      </set>
      where device_id = #{item.deviceId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>