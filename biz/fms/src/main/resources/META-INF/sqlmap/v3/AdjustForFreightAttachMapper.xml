<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.fms.dao.v3.AdjustForFreightAttachMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.fms.domain.v3.AdjustForFreightAttach">
    <id column="attach_id" jdbcType="INTEGER" property="attachId" />
    <result column="adjust_id" jdbcType="INTEGER" property="adjustId" />
    <result column="carry_proof_attach" jdbcType="VARCHAR" property="carryProofAttach" />
    <result column="workload_proof_attach" jdbcType="VARCHAR" property="workloadProofAttach" />
    <result column="upstairs_proof_attach" jdbcType="VARCHAR" property="upstairsProofAttach" />
    <result column="fine_proof_attach" jdbcType="VARCHAR" property="fineProofAttach" />
    <result column="cargo_loss_proof_attach" jdbcType="VARCHAR" property="cargoLossProofAttach" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attach_id, adjust_id, carry_proof_attach, workload_proof_attach, upstairs_proof_attach, 
    fine_proof_attach, cargo_loss_proof_attach, create_user_id, create_time
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttachExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from adjust_for_freight_attach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adjust_for_freight_attach
    where attach_id = #{attachId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from adjust_for_freight_attach
    where attach_id = #{attachId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttachExample">
    delete from adjust_for_freight_attach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="attach_id" keyProperty="attachId" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttach" useGeneratedKeys="true">
    insert into adjust_for_freight_attach (adjust_id, carry_proof_attach, workload_proof_attach, 
      upstairs_proof_attach, fine_proof_attach, cargo_loss_proof_attach, 
      create_user_id, create_time)
    values (#{adjustId,jdbcType=INTEGER}, #{carryProofAttach,jdbcType=VARCHAR}, #{workloadProofAttach,jdbcType=VARCHAR}, 
      #{upstairsProofAttach,jdbcType=VARCHAR}, #{fineProofAttach,jdbcType=VARCHAR}, #{cargoLossProofAttach,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="attach_id" keyProperty="attachId" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttach" useGeneratedKeys="true">
    insert into adjust_for_freight_attach
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adjustId != null">
        adjust_id,
      </if>
      <if test="carryProofAttach != null">
        carry_proof_attach,
      </if>
      <if test="workloadProofAttach != null">
        workload_proof_attach,
      </if>
      <if test="upstairsProofAttach != null">
        upstairs_proof_attach,
      </if>
      <if test="fineProofAttach != null">
        fine_proof_attach,
      </if>
      <if test="cargoLossProofAttach != null">
        cargo_loss_proof_attach,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adjustId != null">
        #{adjustId,jdbcType=INTEGER},
      </if>
      <if test="carryProofAttach != null">
        #{carryProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="workloadProofAttach != null">
        #{workloadProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="upstairsProofAttach != null">
        #{upstairsProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="fineProofAttach != null">
        #{fineProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="cargoLossProofAttach != null">
        #{cargoLossProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttachExample" resultType="java.lang.Long">
    select count(*) from adjust_for_freight_attach
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adjust_for_freight_attach
    <set>
      <if test="record.attachId != null">
        attach_id = #{record.attachId,jdbcType=INTEGER},
      </if>
      <if test="record.adjustId != null">
        adjust_id = #{record.adjustId,jdbcType=INTEGER},
      </if>
      <if test="record.carryProofAttach != null">
        carry_proof_attach = #{record.carryProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.workloadProofAttach != null">
        workload_proof_attach = #{record.workloadProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.upstairsProofAttach != null">
        upstairs_proof_attach = #{record.upstairsProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.fineProofAttach != null">
        fine_proof_attach = #{record.fineProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.cargoLossProofAttach != null">
        cargo_loss_proof_attach = #{record.cargoLossProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adjust_for_freight_attach
    set attach_id = #{record.attachId,jdbcType=INTEGER},
      adjust_id = #{record.adjustId,jdbcType=INTEGER},
      carry_proof_attach = #{record.carryProofAttach,jdbcType=VARCHAR},
      workload_proof_attach = #{record.workloadProofAttach,jdbcType=VARCHAR},
      upstairs_proof_attach = #{record.upstairsProofAttach,jdbcType=VARCHAR},
      fine_proof_attach = #{record.fineProofAttach,jdbcType=VARCHAR},
      cargo_loss_proof_attach = #{record.cargoLossProofAttach,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttach">
    update adjust_for_freight_attach
    <set>
      <if test="adjustId != null">
        adjust_id = #{adjustId,jdbcType=INTEGER},
      </if>
      <if test="carryProofAttach != null">
        carry_proof_attach = #{carryProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="workloadProofAttach != null">
        workload_proof_attach = #{workloadProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="upstairsProofAttach != null">
        upstairs_proof_attach = #{upstairsProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="fineProofAttach != null">
        fine_proof_attach = #{fineProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="cargoLossProofAttach != null">
        cargo_loss_proof_attach = #{cargoLossProofAttach,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where attach_id = #{attachId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.tgm.fms.domain.v3.AdjustForFreightAttach">
    update adjust_for_freight_attach
    set adjust_id = #{adjustId,jdbcType=INTEGER},
      carry_proof_attach = #{carryProofAttach,jdbcType=VARCHAR},
      workload_proof_attach = #{workloadProofAttach,jdbcType=VARCHAR},
      upstairs_proof_attach = #{upstairsProofAttach,jdbcType=VARCHAR},
      fine_proof_attach = #{fineProofAttach,jdbcType=VARCHAR},
      cargo_loss_proof_attach = #{cargoLossProofAttach,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where attach_id = #{attachId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="attachId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into adjust_for_freight_attach
    (adjust_id,carry_proof_attach,workload_proof_attach,upstairs_proof_attach,fine_proof_attach,cargo_loss_proof_attach,create_user_id,create_time) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.adjustId},#{item.carryProofAttach},#{item.workloadProofAttach},#{item.upstairsProofAttach},#{item.fineProofAttach},#{item.cargoLossProofAttach},#{item.createUserId},#{item.createTime})
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update adjust_for_freight_attach
      <set>
        attach_id = #{item.attachId},
        adjust_id = #{item.adjustId},
        carry_proof_attach = #{item.carryProofAttach},
        workload_proof_attach = #{item.workloadProofAttach},
        upstairs_proof_attach = #{item.upstairsProofAttach},
        fine_proof_attach = #{item.fineProofAttach},
        cargo_loss_proof_attach = #{item.cargoLossProofAttach},
        create_user_id = #{item.createUserId},
        create_time = #{item.createTime},
      </set>
      where attach_id = #{item.attachId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update adjust_for_freight_attach
      <set>
        <if test="item.adjustId != null">
          adjust_id = #{item.adjustId,jdbcType=INTEGER},
        </if>
        <if test="item.carryProofAttach != null">
          carry_proof_attach = #{item.carryProofAttach,jdbcType=VARCHAR},
        </if>
        <if test="item.workloadProofAttach != null">
          workload_proof_attach = #{item.workloadProofAttach,jdbcType=VARCHAR},
        </if>
        <if test="item.upstairsProofAttach != null">
          upstairs_proof_attach = #{item.upstairsProofAttach,jdbcType=VARCHAR},
        </if>
        <if test="item.fineProofAttach != null">
          fine_proof_attach = #{item.fineProofAttach,jdbcType=VARCHAR},
        </if>
        <if test="item.cargoLossProofAttach != null">
          cargo_loss_proof_attach = #{item.cargoLossProofAttach,jdbcType=VARCHAR},
        </if>
        <if test="item.createUserId != null">
          create_user_id = #{item.createUserId,jdbcType=INTEGER},
        </if>
        <if test="item.createTime != null">
          create_time = #{item.createTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      where attach_id = #{item.attachId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>