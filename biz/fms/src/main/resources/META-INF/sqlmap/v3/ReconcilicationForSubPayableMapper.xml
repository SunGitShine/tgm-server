<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.juma.tgm.fms.dao.v3.ReconcilicationForSubPayableMapper" >
  <resultMap id="BaseResultMap" type="com.juma.tgm.fms.domain.v3.ReconcilicationForSubPayable" >
    <id column="sub_reconcilication_id" property="subReconcilicationId" jdbcType="INTEGER" />
    <result column="sub_reconcilication_no" property="subReconcilicationNo" jdbcType="VARCHAR" />
    <result column="reconcilication_id" property="reconcilicationId" jdbcType="INTEGER" />
    <result column="vendor_id" property="vendorId" jdbcType="INTEGER" />
    <result column="settle_status" property="settleStatus" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sub_reconcilication_id, sub_reconcilication_no, reconcilication_id, vendor_id, settle_status, 
    create_user_id, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.juma.tgm.fms.domain.v3.ReconcilicationForSubPayableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reconcilication_for_sub_payable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startOffSet!=null" >
      <if test="startOffSet>=0" >
        limit ${startOffSet} , ${size}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.juma.tgm.fms.domain.v3.ReconcilicationForSubPayableExample" >
    delete from reconcilication_for_sub_payable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.juma.tgm.fms.domain.v3.ReconcilicationForSubPayable" >
    <selectKey resultType="java.lang.Integer" keyProperty="subReconcilicationId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reconcilication_for_sub_payable
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subReconcilicationNo != null" >
        sub_reconcilication_no,
      </if>
      <if test="reconcilicationId != null" >
        reconcilication_id,
      </if>
      <if test="vendorId != null" >
        vendor_id,
      </if>
      <if test="settleStatus != null" >
        settle_status,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subReconcilicationNo != null" >
        #{subReconcilicationNo,jdbcType=VARCHAR},
      </if>
      <if test="reconcilicationId != null" >
        #{reconcilicationId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null" >
        #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null" >
        #{settleStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.fms.domain.v3.ReconcilicationForSubPayableExample" resultType="java.lang.Integer" >
    select count(*) from reconcilication_for_sub_payable
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reconcilication_for_sub_payable
    <set >
      <if test="record.subReconcilicationId != null" >
        sub_reconcilication_id = #{record.subReconcilicationId,jdbcType=INTEGER},
      </if>
      <if test="record.subReconcilicationNo != null" >
        sub_reconcilication_no = #{record.subReconcilicationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.reconcilicationId != null" >
        reconcilication_id = #{record.reconcilicationId,jdbcType=INTEGER},
      </if>
      <if test="record.vendorId != null" >
        vendor_id = #{record.vendorId,jdbcType=INTEGER},
      </if>
      <if test="record.settleStatus != null" >
        settle_status = #{record.settleStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reconcilication_for_sub_payable
    set sub_reconcilication_id = #{record.subReconcilicationId,jdbcType=INTEGER},
      sub_reconcilication_no = #{record.subReconcilicationNo,jdbcType=VARCHAR},
      reconcilication_id = #{record.reconcilicationId,jdbcType=INTEGER},
      vendor_id = #{record.vendorId,jdbcType=INTEGER},
      settle_status = #{record.settleStatus,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.fms.domain.v3.ReconcilicationForSubPayable" >
    update reconcilication_for_sub_payable
    <set >
      <if test="subReconcilicationNo != null" >
        sub_reconcilication_no = #{subReconcilicationNo,jdbcType=VARCHAR},
      </if>
      <if test="reconcilicationId != null" >
        reconcilication_id = #{reconcilicationId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null" >
        vendor_id = #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="settleStatus != null" >
        settle_status = #{settleStatus,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sub_reconcilication_id = #{subReconcilicationId,jdbcType=INTEGER}
  </update>
</mapper>