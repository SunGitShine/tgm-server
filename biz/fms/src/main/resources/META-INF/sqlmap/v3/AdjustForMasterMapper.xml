<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.fms.dao.v3.AdjustForMasterMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.fms.domain.v3.AdjustForMaster">
    <id column="adjust_id" jdbcType="INTEGER" property="adjustId" />
    <result column="adjust_no" jdbcType="VARCHAR" property="adjustNo" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="tenant_code" jdbcType="VARCHAR" property="tenantCode" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="reconcilication_no" jdbcType="VARCHAR" property="reconcilicationNo" />
    <result column="before_adjust_amount" jdbcType="DECIMAL" property="beforeAdjustAmount" />
    <result column="before_adjust_withself_amount" jdbcType="DECIMAL" property="beforeAdjustWithselfAmount" />
    <result column="adjust_amount" jdbcType="DECIMAL" property="adjustAmount" />
    <result column="adjust_abs_amount" jdbcType="DECIMAL" property="adjustAbsAmount" />
    <result column="other_side_amount" jdbcType="DECIMAL" property="otherSideAmount" />
    <result column="other_side_withself_amount" jdbcType="DECIMAL" property="otherSideWithselfAmount" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
    <result column="approval_status" jdbcType="INTEGER" property="approvalStatus" />
    <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId" />
    <result column="adjust_type" jdbcType="INTEGER" property="adjustType" />
    <result column="adjust_for_who" jdbcType="INTEGER" property="adjustForWho" />
    <result column="adjust_for_reason" jdbcType="VARCHAR" property="adjustForReason" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    adjust_id, adjust_no, tenant_id, tenant_code, area_code, reconcilication_no, before_adjust_amount, 
    before_adjust_withself_amount, adjust_amount, adjust_abs_amount, other_side_amount, 
    other_side_withself_amount, approval_time, approval_status, process_instance_id, 
    adjust_type, adjust_for_who, adjust_for_reason, create_user_name, create_user_id, 
    create_time, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMasterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from adjust_for_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from adjust_for_master
    where adjust_id = #{adjustId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from adjust_for_master
    where adjust_id = #{adjustId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMasterExample">
    delete from adjust_for_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="adjust_id" keyProperty="adjustId" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMaster" useGeneratedKeys="true">
    insert into adjust_for_master (adjust_no, tenant_id, tenant_code, 
      area_code, reconcilication_no, before_adjust_amount, 
      before_adjust_withself_amount, adjust_amount, 
      adjust_abs_amount, other_side_amount, other_side_withself_amount, 
      approval_time, approval_status, process_instance_id, 
      adjust_type, adjust_for_who, adjust_for_reason, 
      create_user_name, create_user_id, create_time, 
      is_delete)
    values (#{adjustNo,jdbcType=VARCHAR}, #{tenantId,jdbcType=INTEGER}, #{tenantCode,jdbcType=VARCHAR}, 
      #{areaCode,jdbcType=VARCHAR}, #{reconcilicationNo,jdbcType=VARCHAR}, #{beforeAdjustAmount,jdbcType=DECIMAL}, 
      #{beforeAdjustWithselfAmount,jdbcType=DECIMAL}, #{adjustAmount,jdbcType=DECIMAL}, 
      #{adjustAbsAmount,jdbcType=DECIMAL}, #{otherSideAmount,jdbcType=DECIMAL}, #{otherSideWithselfAmount,jdbcType=DECIMAL}, 
      #{approvalTime,jdbcType=TIMESTAMP}, #{approvalStatus,jdbcType=INTEGER}, #{processInstanceId,jdbcType=VARCHAR}, 
      #{adjustType,jdbcType=INTEGER}, #{adjustForWho,jdbcType=INTEGER}, #{adjustForReason,jdbcType=VARCHAR}, 
      #{createUserName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="adjust_id" keyProperty="adjustId" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMaster" useGeneratedKeys="true">
    insert into adjust_for_master
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adjustNo != null">
        adjust_no,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="tenantCode != null">
        tenant_code,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="reconcilicationNo != null">
        reconcilication_no,
      </if>
      <if test="beforeAdjustAmount != null">
        before_adjust_amount,
      </if>
      <if test="beforeAdjustWithselfAmount != null">
        before_adjust_withself_amount,
      </if>
      <if test="adjustAmount != null">
        adjust_amount,
      </if>
      <if test="adjustAbsAmount != null">
        adjust_abs_amount,
      </if>
      <if test="otherSideAmount != null">
        other_side_amount,
      </if>
      <if test="otherSideWithselfAmount != null">
        other_side_withself_amount,
      </if>
      <if test="approvalTime != null">
        approval_time,
      </if>
      <if test="approvalStatus != null">
        approval_status,
      </if>
      <if test="processInstanceId != null">
        process_instance_id,
      </if>
      <if test="adjustType != null">
        adjust_type,
      </if>
      <if test="adjustForWho != null">
        adjust_for_who,
      </if>
      <if test="adjustForReason != null">
        adjust_for_reason,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adjustNo != null">
        #{adjustNo,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="tenantCode != null">
        #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="reconcilicationNo != null">
        #{reconcilicationNo,jdbcType=VARCHAR},
      </if>
      <if test="beforeAdjustAmount != null">
        #{beforeAdjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="beforeAdjustWithselfAmount != null">
        #{beforeAdjustWithselfAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAmount != null">
        #{adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAbsAmount != null">
        #{adjustAbsAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherSideAmount != null">
        #{otherSideAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherSideWithselfAmount != null">
        #{otherSideWithselfAmount,jdbcType=DECIMAL},
      </if>
      <if test="approvalTime != null">
        #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalStatus != null">
        #{approvalStatus,jdbcType=INTEGER},
      </if>
      <if test="processInstanceId != null">
        #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="adjustType != null">
        #{adjustType,jdbcType=INTEGER},
      </if>
      <if test="adjustForWho != null">
        #{adjustForWho,jdbcType=INTEGER},
      </if>
      <if test="adjustForReason != null">
        #{adjustForReason,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMasterExample" resultType="java.lang.Long">
    select count(*) from adjust_for_master
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update adjust_for_master
    <set>
      <if test="record.adjustId != null">
        adjust_id = #{record.adjustId,jdbcType=INTEGER},
      </if>
      <if test="record.adjustNo != null">
        adjust_no = #{record.adjustNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
      <if test="record.tenantCode != null">
        tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="record.areaCode != null">
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.reconcilicationNo != null">
        reconcilication_no = #{record.reconcilicationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeAdjustAmount != null">
        before_adjust_amount = #{record.beforeAdjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.beforeAdjustWithselfAmount != null">
        before_adjust_withself_amount = #{record.beforeAdjustWithselfAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustAmount != null">
        adjust_amount = #{record.adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustAbsAmount != null">
        adjust_abs_amount = #{record.adjustAbsAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.otherSideAmount != null">
        other_side_amount = #{record.otherSideAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.otherSideWithselfAmount != null">
        other_side_withself_amount = #{record.otherSideWithselfAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.approvalTime != null">
        approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approvalStatus != null">
        approval_status = #{record.approvalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.processInstanceId != null">
        process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.adjustType != null">
        adjust_type = #{record.adjustType,jdbcType=INTEGER},
      </if>
      <if test="record.adjustForWho != null">
        adjust_for_who = #{record.adjustForWho,jdbcType=INTEGER},
      </if>
      <if test="record.adjustForReason != null">
        adjust_for_reason = #{record.adjustForReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserName != null">
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update adjust_for_master
    set adjust_id = #{record.adjustId,jdbcType=INTEGER},
      adjust_no = #{record.adjustNo,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=INTEGER},
      tenant_code = #{record.tenantCode,jdbcType=VARCHAR},
      area_code = #{record.areaCode,jdbcType=VARCHAR},
      reconcilication_no = #{record.reconcilicationNo,jdbcType=VARCHAR},
      before_adjust_amount = #{record.beforeAdjustAmount,jdbcType=DECIMAL},
      before_adjust_withself_amount = #{record.beforeAdjustWithselfAmount,jdbcType=DECIMAL},
      adjust_amount = #{record.adjustAmount,jdbcType=DECIMAL},
      adjust_abs_amount = #{record.adjustAbsAmount,jdbcType=DECIMAL},
      other_side_amount = #{record.otherSideAmount,jdbcType=DECIMAL},
      other_side_withself_amount = #{record.otherSideWithselfAmount,jdbcType=DECIMAL},
      approval_time = #{record.approvalTime,jdbcType=TIMESTAMP},
      approval_status = #{record.approvalStatus,jdbcType=INTEGER},
      process_instance_id = #{record.processInstanceId,jdbcType=VARCHAR},
      adjust_type = #{record.adjustType,jdbcType=INTEGER},
      adjust_for_who = #{record.adjustForWho,jdbcType=INTEGER},
      adjust_for_reason = #{record.adjustForReason,jdbcType=VARCHAR},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMaster">
    update adjust_for_master
    <set>
      <if test="adjustNo != null">
        adjust_no = #{adjustNo,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="tenantCode != null">
        tenant_code = #{tenantCode,jdbcType=VARCHAR},
      </if>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="reconcilicationNo != null">
        reconcilication_no = #{reconcilicationNo,jdbcType=VARCHAR},
      </if>
      <if test="beforeAdjustAmount != null">
        before_adjust_amount = #{beforeAdjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="beforeAdjustWithselfAmount != null">
        before_adjust_withself_amount = #{beforeAdjustWithselfAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAmount != null">
        adjust_amount = #{adjustAmount,jdbcType=DECIMAL},
      </if>
      <if test="adjustAbsAmount != null">
        adjust_abs_amount = #{adjustAbsAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherSideAmount != null">
        other_side_amount = #{otherSideAmount,jdbcType=DECIMAL},
      </if>
      <if test="otherSideWithselfAmount != null">
        other_side_withself_amount = #{otherSideWithselfAmount,jdbcType=DECIMAL},
      </if>
      <if test="approvalTime != null">
        approval_time = #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalStatus != null">
        approval_status = #{approvalStatus,jdbcType=INTEGER},
      </if>
      <if test="processInstanceId != null">
        process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="adjustType != null">
        adjust_type = #{adjustType,jdbcType=INTEGER},
      </if>
      <if test="adjustForWho != null">
        adjust_for_who = #{adjustForWho,jdbcType=INTEGER},
      </if>
      <if test="adjustForReason != null">
        adjust_for_reason = #{adjustForReason,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where adjust_id = #{adjustId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.tgm.fms.domain.v3.AdjustForMaster">
    update adjust_for_master
    set adjust_no = #{adjustNo,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=INTEGER},
      tenant_code = #{tenantCode,jdbcType=VARCHAR},
      area_code = #{areaCode,jdbcType=VARCHAR},
      reconcilication_no = #{reconcilicationNo,jdbcType=VARCHAR},
      before_adjust_amount = #{beforeAdjustAmount,jdbcType=DECIMAL},
      before_adjust_withself_amount = #{beforeAdjustWithselfAmount,jdbcType=DECIMAL},
      adjust_amount = #{adjustAmount,jdbcType=DECIMAL},
      adjust_abs_amount = #{adjustAbsAmount,jdbcType=DECIMAL},
      other_side_amount = #{otherSideAmount,jdbcType=DECIMAL},
      other_side_withself_amount = #{otherSideWithselfAmount,jdbcType=DECIMAL},
      approval_time = #{approvalTime,jdbcType=TIMESTAMP},
      approval_status = #{approvalStatus,jdbcType=INTEGER},
      process_instance_id = #{processInstanceId,jdbcType=VARCHAR},
      adjust_type = #{adjustType,jdbcType=INTEGER},
      adjust_for_who = #{adjustForWho,jdbcType=INTEGER},
      adjust_for_reason = #{adjustForReason,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where adjust_id = #{adjustId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="adjustId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into adjust_for_master
    (adjust_no,tenant_id,tenant_code,area_code,reconcilication_no,before_adjust_amount,before_adjust_withself_amount,adjust_amount,adjust_abs_amount,other_side_amount,other_side_withself_amount,approval_time,approval_status,process_instance_id,adjust_type,adjust_for_who,adjust_for_reason,create_user_name,create_user_id,create_time,is_delete) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.adjustNo},#{item.tenantId},#{item.tenantCode},#{item.areaCode},#{item.reconcilicationNo},#{item.beforeAdjustAmount},#{item.beforeAdjustWithselfAmount},#{item.adjustAmount},#{item.adjustAbsAmount},#{item.otherSideAmount},#{item.otherSideWithselfAmount},#{item.approvalTime},#{item.approvalStatus},#{item.processInstanceId},#{item.adjustType},#{item.adjustForWho},#{item.adjustForReason},#{item.createUserName},#{item.createUserId},#{item.createTime},#{item.isDelete})
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update adjust_for_master
      <set>
        adjust_id = #{item.adjustId},
        adjust_no = #{item.adjustNo},
        tenant_id = #{item.tenantId},
        tenant_code = #{item.tenantCode},
        area_code = #{item.areaCode},
        reconcilication_no = #{item.reconcilicationNo},
        before_adjust_amount = #{item.beforeAdjustAmount},
        before_adjust_withself_amount = #{item.beforeAdjustWithselfAmount},
        adjust_amount = #{item.adjustAmount},
        adjust_abs_amount = #{item.adjustAbsAmount},
        other_side_amount = #{item.otherSideAmount},
        other_side_withself_amount = #{item.otherSideWithselfAmount},
        approval_time = #{item.approvalTime},
        approval_status = #{item.approvalStatus},
        process_instance_id = #{item.processInstanceId},
        adjust_type = #{item.adjustType},
        adjust_for_who = #{item.adjustForWho},
        adjust_for_reason = #{item.adjustForReason},
        create_user_name = #{item.createUserName},
        create_user_id = #{item.createUserId},
        create_time = #{item.createTime},
        is_delete = #{item.isDelete},
      </set>
      where adjust_id = #{item.adjustId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update adjust_for_master
      <set>
        <if test="item.adjustNo != null">
          adjust_no = #{item.adjustNo,jdbcType=VARCHAR},
        </if>
        <if test="item.tenantId != null">
          tenant_id = #{item.tenantId,jdbcType=INTEGER},
        </if>
        <if test="item.tenantCode != null">
          tenant_code = #{item.tenantCode,jdbcType=VARCHAR},
        </if>
        <if test="item.areaCode != null">
          area_code = #{item.areaCode,jdbcType=VARCHAR},
        </if>
        <if test="item.reconcilicationNo != null">
          reconcilication_no = #{item.reconcilicationNo,jdbcType=VARCHAR},
        </if>
        <if test="item.beforeAdjustAmount != null">
          before_adjust_amount = #{item.beforeAdjustAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.beforeAdjustWithselfAmount != null">
          before_adjust_withself_amount = #{item.beforeAdjustWithselfAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.adjustAmount != null">
          adjust_amount = #{item.adjustAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.adjustAbsAmount != null">
          adjust_abs_amount = #{item.adjustAbsAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.otherSideAmount != null">
          other_side_amount = #{item.otherSideAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.otherSideWithselfAmount != null">
          other_side_withself_amount = #{item.otherSideWithselfAmount,jdbcType=DECIMAL},
        </if>
        <if test="item.approvalTime != null">
          approval_time = #{item.approvalTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.approvalStatus != null">
          approval_status = #{item.approvalStatus,jdbcType=INTEGER},
        </if>
        <if test="item.processInstanceId != null">
          process_instance_id = #{item.processInstanceId,jdbcType=VARCHAR},
        </if>
        <if test="item.adjustType != null">
          adjust_type = #{item.adjustType,jdbcType=INTEGER},
        </if>
        <if test="item.adjustForWho != null">
          adjust_for_who = #{item.adjustForWho,jdbcType=INTEGER},
        </if>
        <if test="item.adjustForReason != null">
          adjust_for_reason = #{item.adjustForReason,jdbcType=VARCHAR},
        </if>
        <if test="item.createUserName != null">
          create_user_name = #{item.createUserName,jdbcType=VARCHAR},
        </if>
        <if test="item.createUserId != null">
          create_user_id = #{item.createUserId,jdbcType=INTEGER},
        </if>
        <if test="item.createTime != null">
          create_time = #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.isDelete != null">
          is_delete = #{item.isDelete,jdbcType=TINYINT},
        </if>
      </set>
      where adjust_id = #{item.adjustId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>