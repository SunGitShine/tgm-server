<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.fms.dao.v3.ReconciliationExtraForPayableMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayable">
    <id column="extra_id" jdbcType="INTEGER" property="extraId" />
    <result column="reconciliation_id" jdbcType="INTEGER" property="reconciliationId" />
    <result column="vendor_id" jdbcType="INTEGER" property="vendorId" />
    <result column="oil_card_fee" jdbcType="DECIMAL" property="oilCardFee" />
    <result column="management_fee" jdbcType="DECIMAL" property="managementFee" />
    <result column="is_invoice" jdbcType="TINYINT" property="isInvoice" />
    <result column="tax_rate" jdbcType="DECIMAL" property="taxRate" />
    <result column="reference_tax_fee" jdbcType="DECIMAL" property="referenceTaxFee" />
    <result column="vendor_tax_rate" jdbcType="DECIMAL" property="vendorTaxRate" />
    <result column="deduction_tax_fee" jdbcType="DECIMAL" property="deductionTaxFee" />
    <result column="adjust_time" jdbcType="TIMESTAMP" property="adjustTime" />
    <result column="adjust_user_id" jdbcType="INTEGER" property="adjustUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.singleValue and !criterion.noValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.likeListValue">
                  and
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator="or">
                    ${criterion.condition} concat(#{listItem},'%')
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    extra_id, reconciliation_id, vendor_id, oil_card_fee, management_fee, is_invoice, 
    tax_rate, reference_tax_fee, vendor_tax_rate, deduction_tax_fee, adjust_time, adjust_user_id
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayableExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from reconciliation_extra_for_payable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet != null and startOffSet>=0">
      limit ${startOffSet} , ${size}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reconciliation_extra_for_payable
    where extra_id = #{extraId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reconciliation_extra_for_payable
    where extra_id = #{extraId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayableExample">
    delete from reconciliation_extra_for_payable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="extra_id" keyProperty="extraId" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayable" useGeneratedKeys="true">
    insert into reconciliation_extra_for_payable (reconciliation_id, vendor_id, oil_card_fee, 
      management_fee, is_invoice, tax_rate, 
      reference_tax_fee, vendor_tax_rate, deduction_tax_fee, 
      adjust_time, adjust_user_id)
    values (#{reconciliationId,jdbcType=INTEGER}, #{vendorId,jdbcType=INTEGER}, #{oilCardFee,jdbcType=DECIMAL}, 
      #{managementFee,jdbcType=DECIMAL}, #{isInvoice,jdbcType=TINYINT}, #{taxRate,jdbcType=DECIMAL}, 
      #{referenceTaxFee,jdbcType=DECIMAL}, #{vendorTaxRate,jdbcType=DECIMAL}, #{deductionTaxFee,jdbcType=DECIMAL}, 
      #{adjustTime,jdbcType=TIMESTAMP}, #{adjustUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="extra_id" keyProperty="extraId" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayable" useGeneratedKeys="true">
    insert into reconciliation_extra_for_payable
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reconciliationId != null">
        reconciliation_id,
      </if>
      <if test="vendorId != null">
        vendor_id,
      </if>
      <if test="oilCardFee != null">
        oil_card_fee,
      </if>
      <if test="managementFee != null">
        management_fee,
      </if>
      <if test="isInvoice != null">
        is_invoice,
      </if>
      <if test="taxRate != null">
        tax_rate,
      </if>
      <if test="referenceTaxFee != null">
        reference_tax_fee,
      </if>
      <if test="vendorTaxRate != null">
        vendor_tax_rate,
      </if>
      <if test="deductionTaxFee != null">
        deduction_tax_fee,
      </if>
      <if test="adjustTime != null">
        adjust_time,
      </if>
      <if test="adjustUserId != null">
        adjust_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reconciliationId != null">
        #{reconciliationId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null">
        #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="oilCardFee != null">
        #{oilCardFee,jdbcType=DECIMAL},
      </if>
      <if test="managementFee != null">
        #{managementFee,jdbcType=DECIMAL},
      </if>
      <if test="isInvoice != null">
        #{isInvoice,jdbcType=TINYINT},
      </if>
      <if test="taxRate != null">
        #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="referenceTaxFee != null">
        #{referenceTaxFee,jdbcType=DECIMAL},
      </if>
      <if test="vendorTaxRate != null">
        #{vendorTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="deductionTaxFee != null">
        #{deductionTaxFee,jdbcType=DECIMAL},
      </if>
      <if test="adjustTime != null">
        #{adjustTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustUserId != null">
        #{adjustUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayableExample" resultType="java.lang.Long">
    select count(*) from reconciliation_extra_for_payable
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reconciliation_extra_for_payable
    <set>
      <if test="record.extraId != null">
        extra_id = #{record.extraId,jdbcType=INTEGER},
      </if>
      <if test="record.reconciliationId != null">
        reconciliation_id = #{record.reconciliationId,jdbcType=INTEGER},
      </if>
      <if test="record.vendorId != null">
        vendor_id = #{record.vendorId,jdbcType=INTEGER},
      </if>
      <if test="record.oilCardFee != null">
        oil_card_fee = #{record.oilCardFee,jdbcType=DECIMAL},
      </if>
      <if test="record.managementFee != null">
        management_fee = #{record.managementFee,jdbcType=DECIMAL},
      </if>
      <if test="record.isInvoice != null">
        is_invoice = #{record.isInvoice,jdbcType=TINYINT},
      </if>
      <if test="record.taxRate != null">
        tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.referenceTaxFee != null">
        reference_tax_fee = #{record.referenceTaxFee,jdbcType=DECIMAL},
      </if>
      <if test="record.vendorTaxRate != null">
        vendor_tax_rate = #{record.vendorTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="record.deductionTaxFee != null">
        deduction_tax_fee = #{record.deductionTaxFee,jdbcType=DECIMAL},
      </if>
      <if test="record.adjustTime != null">
        adjust_time = #{record.adjustTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adjustUserId != null">
        adjust_user_id = #{record.adjustUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reconciliation_extra_for_payable
    set extra_id = #{record.extraId,jdbcType=INTEGER},
      reconciliation_id = #{record.reconciliationId,jdbcType=INTEGER},
      vendor_id = #{record.vendorId,jdbcType=INTEGER},
      oil_card_fee = #{record.oilCardFee,jdbcType=DECIMAL},
      management_fee = #{record.managementFee,jdbcType=DECIMAL},
      is_invoice = #{record.isInvoice,jdbcType=TINYINT},
      tax_rate = #{record.taxRate,jdbcType=DECIMAL},
      reference_tax_fee = #{record.referenceTaxFee,jdbcType=DECIMAL},
      vendor_tax_rate = #{record.vendorTaxRate,jdbcType=DECIMAL},
      deduction_tax_fee = #{record.deductionTaxFee,jdbcType=DECIMAL},
      adjust_time = #{record.adjustTime,jdbcType=TIMESTAMP},
      adjust_user_id = #{record.adjustUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayable">
    update reconciliation_extra_for_payable
    <set>
      <if test="reconciliationId != null">
        reconciliation_id = #{reconciliationId,jdbcType=INTEGER},
      </if>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=INTEGER},
      </if>
      <if test="oilCardFee != null">
        oil_card_fee = #{oilCardFee,jdbcType=DECIMAL},
      </if>
      <if test="managementFee != null">
        management_fee = #{managementFee,jdbcType=DECIMAL},
      </if>
      <if test="isInvoice != null">
        is_invoice = #{isInvoice,jdbcType=TINYINT},
      </if>
      <if test="taxRate != null">
        tax_rate = #{taxRate,jdbcType=DECIMAL},
      </if>
      <if test="referenceTaxFee != null">
        reference_tax_fee = #{referenceTaxFee,jdbcType=DECIMAL},
      </if>
      <if test="vendorTaxRate != null">
        vendor_tax_rate = #{vendorTaxRate,jdbcType=DECIMAL},
      </if>
      <if test="deductionTaxFee != null">
        deduction_tax_fee = #{deductionTaxFee,jdbcType=DECIMAL},
      </if>
      <if test="adjustTime != null">
        adjust_time = #{adjustTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adjustUserId != null">
        adjust_user_id = #{adjustUserId,jdbcType=INTEGER},
      </if>
    </set>
    where extra_id = #{extraId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.juma.tgm.fms.domain.v3.ReconciliationExtraForPayable">
    update reconciliation_extra_for_payable
    set reconciliation_id = #{reconciliationId,jdbcType=INTEGER},
      vendor_id = #{vendorId,jdbcType=INTEGER},
      oil_card_fee = #{oilCardFee,jdbcType=DECIMAL},
      management_fee = #{managementFee,jdbcType=DECIMAL},
      is_invoice = #{isInvoice,jdbcType=TINYINT},
      tax_rate = #{taxRate,jdbcType=DECIMAL},
      reference_tax_fee = #{referenceTaxFee,jdbcType=DECIMAL},
      vendor_tax_rate = #{vendorTaxRate,jdbcType=DECIMAL},
      deduction_tax_fee = #{deductionTaxFee,jdbcType=DECIMAL},
      adjust_time = #{adjustTime,jdbcType=TIMESTAMP},
      adjust_user_id = #{adjustUserId,jdbcType=INTEGER}
    where extra_id = #{extraId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatch" keyProperty="extraId" parameterType="java.util.List" useGeneratedKeys="true">
    insert into reconciliation_extra_for_payable
    (reconciliation_id,vendor_id,oil_card_fee,management_fee,is_invoice,tax_rate,reference_tax_fee,vendor_tax_rate,deduction_tax_fee,adjust_time,adjust_user_id) values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.reconciliationId},#{item.vendorId},#{item.oilCardFee},#{item.managementFee},#{item.isInvoice},#{item.taxRate},#{item.referenceTaxFee},#{item.vendorTaxRate},#{item.deductionTaxFee},#{item.adjustTime},#{item.adjustUserId})
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update reconciliation_extra_for_payable
      <set>
        extra_id = #{item.extraId},
        reconciliation_id = #{item.reconciliationId},
        vendor_id = #{item.vendorId},
        oil_card_fee = #{item.oilCardFee},
        management_fee = #{item.managementFee},
        is_invoice = #{item.isInvoice},
        tax_rate = #{item.taxRate},
        reference_tax_fee = #{item.referenceTaxFee},
        vendor_tax_rate = #{item.vendorTaxRate},
        deduction_tax_fee = #{item.deductionTaxFee},
        adjust_time = #{item.adjustTime},
        adjust_user_id = #{item.adjustUserId},
      </set>
      where extra_id = #{item.extraId,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach close="" collection="list" index="index" item="item" open="" separator=";">
      update reconciliation_extra_for_payable
      <set>
        <if test="item.reconciliationId != null">
          reconciliation_id = #{item.reconciliationId,jdbcType=INTEGER},
        </if>
        <if test="item.vendorId != null">
          vendor_id = #{item.vendorId,jdbcType=INTEGER},
        </if>
        <if test="item.oilCardFee != null">
          oil_card_fee = #{item.oilCardFee,jdbcType=DECIMAL},
        </if>
        <if test="item.managementFee != null">
          management_fee = #{item.managementFee,jdbcType=DECIMAL},
        </if>
        <if test="item.isInvoice != null">
          is_invoice = #{item.isInvoice,jdbcType=TINYINT},
        </if>
        <if test="item.taxRate != null">
          tax_rate = #{item.taxRate,jdbcType=DECIMAL},
        </if>
        <if test="item.referenceTaxFee != null">
          reference_tax_fee = #{item.referenceTaxFee,jdbcType=DECIMAL},
        </if>
        <if test="item.vendorTaxRate != null">
          vendor_tax_rate = #{item.vendorTaxRate,jdbcType=DECIMAL},
        </if>
        <if test="item.deductionTaxFee != null">
          deduction_tax_fee = #{item.deductionTaxFee,jdbcType=DECIMAL},
        </if>
        <if test="item.adjustTime != null">
          adjust_time = #{item.adjustTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.adjustUserId != null">
          adjust_user_id = #{item.adjustUserId,jdbcType=INTEGER},
        </if>
      </set>
      where extra_id = #{item.extraId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>