<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juma.tgm.configure.dao.ServiceConfItemMapper">
  <resultMap id="BaseResultMap" type="com.juma.tgm.configure.domain.ServiceConfItem">
    <id column="service_conf_item_id" jdbcType="INTEGER" property="serviceConfItemId" />
    <result column="service_conf_id" jdbcType="INTEGER" property="serviceConfId" />
    <result column="fence_id" jdbcType="INTEGER" property="fenceId" />
    <result column="fence_name" jdbcType="VARCHAR" property="fenceName" />
    <result column="fence_type" jdbcType="TINYINT" property="fenceType" />
    <result column="fence_address" jdbcType="VARCHAR" property="fenceAddress" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="last_update_user_id" jdbcType="INTEGER" property="lastUpdateUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    service_conf_item_id, service_conf_id, fence_id, fence_name, fence_type, fence_address, 
    create_time, create_user_id, last_update_time, last_update_user_id
  </sql>
  <select id="selectByExample" parameterType="com.juma.tgm.configure.domain.ServiceConfItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from service_conf_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startOffSet!=null">
      <if test="startOffSet>=0">
        limit ${startOffSet} , ${size}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service_conf_item
    where service_conf_item_id = #{serviceConfItemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from service_conf_item
    where service_conf_item_id = #{serviceConfItemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.juma.tgm.configure.domain.ServiceConfItemExample">
    delete from service_conf_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.juma.tgm.configure.domain.ServiceConfItem">
    insert into service_conf_item (service_conf_item_id, service_conf_id, 
      fence_id, fence_name, fence_type, 
      fence_address, create_time, create_user_id, 
      last_update_time, last_update_user_id)
    values (#{serviceConfItemId,jdbcType=INTEGER}, #{serviceConfId,jdbcType=INTEGER}, 
      #{fenceId,jdbcType=INTEGER}, #{fenceName,jdbcType=VARCHAR}, #{fenceType,jdbcType=TINYINT}, 
      #{fenceAddress,jdbcType=VARCHAR}, now(), #{createUserId,jdbcType=INTEGER}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{lastUpdateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.juma.tgm.configure.domain.ServiceConfItem">
    insert into service_conf_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceConfItemId != null">
        service_conf_item_id,
      </if>
      <if test="serviceConfId != null">
        service_conf_id,
      </if>
      <if test="fenceId != null">
        fence_id,
      </if>
      <if test="fenceName != null">
        fence_name,
      </if>
      <if test="fenceType != null">
        fence_type,
      </if>
      <if test="fenceAddress != null">
        fence_address,
      </if>
        create_time,
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="lastUpdateUserId != null">
        last_update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceConfItemId != null">
        #{serviceConfItemId,jdbcType=INTEGER},
      </if>
      <if test="serviceConfId != null">
        #{serviceConfId,jdbcType=INTEGER},
      </if>
      <if test="fenceId != null">
        #{fenceId,jdbcType=INTEGER},
      </if>
      <if test="fenceName != null">
        #{fenceName,jdbcType=VARCHAR},
      </if>
      <if test="fenceType != null">
        #{fenceType,jdbcType=TINYINT},
      </if>
      <if test="fenceAddress != null">
        #{fenceAddress,jdbcType=VARCHAR},
      </if>
        now(),
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateUserId != null">
        #{lastUpdateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.configure.domain.ServiceConfItemExample" resultType="java.lang.Long">
    select count(*) from service_conf_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update service_conf_item
    <set>
      <if test="record.serviceConfItemId != null">
        service_conf_item_id = #{record.serviceConfItemId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceConfId != null">
        service_conf_id = #{record.serviceConfId,jdbcType=INTEGER},
      </if>
      <if test="record.fenceId != null">
        fence_id = #{record.fenceId,jdbcType=INTEGER},
      </if>
      <if test="record.fenceName != null">
        fence_name = #{record.fenceName,jdbcType=VARCHAR},
      </if>
      <if test="record.fenceType != null">
        fence_type = #{record.fenceType,jdbcType=TINYINT},
      </if>
      <if test="record.fenceAddress != null">
        fence_address = #{record.fenceAddress,jdbcType=VARCHAR},
      </if>
        last_update_time = now(),
      <if test="record.lastUpdateUserId != null">
        last_update_user_id = #{record.lastUpdateUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update service_conf_item
    set service_conf_item_id = #{record.serviceConfItemId,jdbcType=INTEGER},
      service_conf_id = #{record.serviceConfId,jdbcType=INTEGER},
      fence_id = #{record.fenceId,jdbcType=INTEGER},
      fence_name = #{record.fenceName,jdbcType=VARCHAR},
      fence_type = #{record.fenceType,jdbcType=TINYINT},
      fence_address = #{record.fenceAddress,jdbcType=VARCHAR},
      last_update_time = now(),
      last_update_user_id = #{record.lastUpdateUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.configure.domain.ServiceConfItem">
    update service_conf_item
    <set>
      <if test="serviceConfId != null">
        service_conf_id = #{serviceConfId,jdbcType=INTEGER},
      </if>
      <if test="fenceId != null">
        fence_id = #{fenceId,jdbcType=INTEGER},
      </if>
      <if test="fenceName != null">
        fence_name = #{fenceName,jdbcType=VARCHAR},
      </if>
      <if test="fenceType != null">
        fence_type = #{fenceType,jdbcType=TINYINT},
      </if>
      <if test="fenceAddress != null">
        fence_address = #{fenceAddress,jdbcType=VARCHAR},
      </if>
        last_update_time = now(),
      <if test="lastUpdateUserId != null">
        last_update_user_id = #{lastUpdateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where service_conf_item_id = #{serviceConfItemId,jdbcType=INTEGER}
  </update>
</mapper>