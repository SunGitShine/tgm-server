<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.juma.tgm.waybill.dao.WaybillReceiveAddressCargoMapper" >
  <resultMap id="BaseResultMap" type="com.juma.tgm.waybill.domain.WaybillReceiveAddressCargo" >
    <id column="cargo_id" property="cargoId" jdbcType="INTEGER" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="cargo_name" property="cargoName" jdbcType="VARCHAR" />
    <result column="cargo_type" property="cargoType" jdbcType="VARCHAR" />
    <result column="cargo_volume" property="cargoVolume" jdbcType="REAL" />
    <result column="cargo_packages" property="cargoPackages" jdbcType="INTEGER" />
    <result column="cargo_weight" property="cargoWeight" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cargo_id, address_id, cargo_name, cargo_type, cargo_volume, cargo_packages, cargo_weight
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.juma.tgm.waybill.domain.WaybillReceiveAddressCargoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from waybill_receive_address_cargo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startOffSet!=null" >
      <if test="startOffSet>=0" >
        limit ${startOffSet} , ${size}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.juma.tgm.waybill.domain.WaybillReceiveAddressCargoExample" >
    delete from waybill_receive_address_cargo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.juma.tgm.waybill.domain.WaybillReceiveAddressCargo" >
    <selectKey resultType="java.lang.Integer" keyProperty="cargoId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into waybill_receive_address_cargo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="cargoName != null" >
        cargo_name,
      </if>
      <if test="cargoType != null" >
        cargo_type,
      </if>
      <if test="cargoVolume != null" >
        cargo_volume,
      </if>
      <if test="cargoPackages != null" >
        cargo_packages,
      </if>
      <if test="cargoWeight != null" >
        cargo_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="cargoName != null" >
        #{cargoName,jdbcType=VARCHAR},
      </if>
      <if test="cargoType != null" >
        #{cargoType,jdbcType=VARCHAR},
      </if>
      <if test="cargoVolume != null" >
        #{cargoVolume,jdbcType=REAL},
      </if>
      <if test="cargoPackages != null" >
        #{cargoPackages,jdbcType=INTEGER},
      </if>
      <if test="cargoWeight != null" >
        #{cargoWeight,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.juma.tgm.waybill.domain.WaybillReceiveAddressCargoExample" resultType="java.lang.Integer" >
    select count(*) from waybill_receive_address_cargo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update waybill_receive_address_cargo
    <set >
      <if test="record.cargoId != null" >
        cargo_id = #{record.cargoId,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.cargoName != null" >
        cargo_name = #{record.cargoName,jdbcType=VARCHAR},
      </if>
      <if test="record.cargoType != null" >
        cargo_type = #{record.cargoType,jdbcType=VARCHAR},
      </if>
      <if test="record.cargoVolume != null" >
        cargo_volume = #{record.cargoVolume,jdbcType=REAL},
      </if>
      <if test="record.cargoPackages != null" >
        cargo_packages = #{record.cargoPackages,jdbcType=INTEGER},
      </if>
      <if test="record.cargoWeight != null" >
        cargo_weight = #{record.cargoWeight,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update waybill_receive_address_cargo
    set cargo_id = #{record.cargoId,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      cargo_name = #{record.cargoName,jdbcType=VARCHAR},
      cargo_type = #{record.cargoType,jdbcType=VARCHAR},
      cargo_volume = #{record.cargoVolume,jdbcType=REAL},
      cargo_packages = #{record.cargoPackages,jdbcType=INTEGER},
      cargo_weight = #{record.cargoWeight,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.juma.tgm.waybill.domain.WaybillReceiveAddressCargo" >
    update waybill_receive_address_cargo
    <set >
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="cargoName != null" >
        cargo_name = #{cargoName,jdbcType=VARCHAR},
      </if>
      <if test="cargoType != null" >
        cargo_type = #{cargoType,jdbcType=VARCHAR},
      </if>
      <if test="cargoVolume != null" >
        cargo_volume = #{cargoVolume,jdbcType=REAL},
      </if>
      <if test="cargoPackages != null" >
        cargo_packages = #{cargoPackages,jdbcType=INTEGER},
      </if>
      <if test="cargoWeight != null" >
        cargo_weight = #{cargoWeight,jdbcType=REAL},
      </if>
    </set>
    where cargo_id = #{cargoId,jdbcType=INTEGER}
  </update>
</mapper>